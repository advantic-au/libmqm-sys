name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  MQ_VERSION_LATEST: 9.4.1.0
  RUSTFLAGS: -Dwarnings

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - client-version: 9.2.0.27
            feature: mqc_9_2_0_27
          - client-version: 9.3.1.0
            feature: mqc_9_3_1_0
          - client-version: 9.3.4.1
            feature: mqc_9_3_4_1
          - client-version: 9.4.1.0
            feature: mqc_9_4_1_0
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: advantic-au/action-mq-client@stable
        id: mq-client
        with:
          client-version: ${{ matrix.version.client-version }}
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build"
      - name: Test
        run: cargo test --features ${{ matrix.version.feature }},pcf,exits,mqai,dlopen2
        env:
          MQ_HOME: ${{ steps.mq-client.outputs.client-install-path }}

  pregen:
    strategy:
      fail-fast: false
      matrix:
        build:
          - os: windows-latest
            mq-version: 9.4.1.0
          - os: ubuntu-24.04
            mq-version: 9.4.1.0
          - os: macos-latest
            mq-version: 9.4.1.0
    runs-on: ${{ matrix.build.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: advantic-au/action-mq-client@stable
        id: mq-client
        with:
          client-version: ${{ matrix.build.mq-version }}
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build"
      - name: Refresh pregenerated content
        run: cargo build --no-default-features --features pregen
        env:
          MQ_HOME: ${{ steps.mq-client.outputs.client-install-path }}
      - name: Detect pregenerated changes
        run: |
          git add -N libmqm-sys/src libmqm-default/src
          git diff --stat --exit-code libmqm-sys/src libmqm-default/src
  
  rustfmt:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt
      - name: Lint with rustfmt
        run: cargo fmt -- --check
        
  clippy:
    strategy:
      fail-fast: false
      matrix:
        features:
          - ""
          - "--no-default-features"
          - "--all-features"
    runs-on: ubuntu-24.04
    permissions:
      checks: write # For the clippy action
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: advantic-au/action-mq-client@stable
        id: mq-client
        with:
          client-version: ${{ env.MQ_VERSION_LATEST }}
      - name: Install stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build"
      - name: Lint with clippy 
        uses: auguwu/clippy-action@1.4.0
        env:
          MQ_HOME: ${{ steps.mq-client.outputs.client-install-path }}
        with:
          check-args: --tests ${{ matrix.features }}
          token: ${{secrets.GITHUB_TOKEN}}

  minimum:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: advantic-au/action-mq-client@stable
        id: mq-client
        with:
          client-version: ${{ env.MQ_VERSION_LATEST }}
      # Re-resolve Cargo.lock with minimal versions
      - uses: dtolnay/rust-toolchain@nightly # -Z option only available on nightly
      - run: cargo generate-lockfile -Z minimal-versions
      # Now verify that `cargo check` works with respect to the oldest possible
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.77
      - name: Check code
        run: cargo check --locked --all-features
        env:
          MQ_HOME: ${{ steps.mq-client.outputs.client-install-path }}

  docs:
    runs-on: ubuntu-24.04
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - uses: taiki-e/install-action@e523301c9af289ba196edd3ab08abdece06107d2 # v2.46.9
        with:
          tool: cargo-docs-rs
      - run: cargo docs-rs -p libmqm-sys --target x86_64-unknown-linux-gnu
      - run: cargo docs-rs -p libmqm-default --target x86_64-unknown-linux-gnu
